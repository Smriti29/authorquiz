{"version":3,"sources":["AuthorQuiz.js","AddAuthorForm.js","serviceWorker.js","index.js"],"names":["Hero","react_default","a","createElement","className","Book","_ref","title","onClick","Turn","_ref2","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","key","Continue","_ref3","show","onContinue","Footer","id","href","AuthorQuiz","_ref4","turnData","Object","assign","react_router_dom","to","AuthorForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","bookTemp","onFieldChange","bind","assertThisInitialized","handleSubmit","handleAddBook","event","preventDefault","onAddAuthor","setState","concat","defineProperty","target","value","onSubmit","htmlFor","type","onChange","book","React","Component","AddAuthorForm","match","AddAuthorForm_AuthorForm","Boolean","window","location","hostname","authors","imageSource","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","answer","sample","find","some","resetState","isCorrect","render","App","src_AuthorQuiz","withRouter","history","src_AddAuthorForm","push","ReactDOM","Fragment","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9da97575.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom';\nimport './bootstrap.min.css';\n//import PropTypes from 'prop-types';\n\nfunction Hero() {\n\treturn (<div className=\"row\">\n          <div className=\"header\">\n           <h1>Author Quiz</h1>\n           <p>Select the book written by the author shown</p>\n          </div>\n\t\t  </div>\n\t\t)\n}\nfunction Book({title, onClick}) {\n  return (<div className=\"answer\" onClick={() => {onClick(title);}}>\n           <h4>{title}</h4>\n  </div>)\n}\n\nfunction Turn({author, books, highlight, onAnswerSelected}) {\n    function highlightToBgColor(highlight) {\n        const mapping = {\n          'none' :'',\n          'correct' : 'green',\n          'wrong' : 'red'\n        };\n        return mapping[highlight];\n    }\n    return (<div className=\"row turn\" style={{backgroundColor: highlightToBgColor(highlight)}}>\n              <div className=\"col-4 offset-1\">\n                <img src={author.imageUrl} className=\"authorimage\" alt=\"author\"></img>\n              </div>\n              <div className=\"col-6\">\n                {books.map((title) => <Book title={title} key={title} onClick={onAnswerSelected}/>)}\n              </div>\n    \t    </div>\n    \t);\n}\n// Turn.propTypes = {\n//    author : propTypes.shape({\n//      name: propTypes.string.isRequired,\n//      imageUrl: propTypes.string.isRequired,\n//      imageSource: propTypes.string.isRequired,\n//      books: propTypes.arrayOf(propTypes.string).isRequired\n//    }),\n//    books: propTypes.arrayOf(propTypes.string).isRequired,\n//    highlight: propTypes.string.isRequired,\n//    onAnswerSelected: propTypes.func.isRequired\n// }\nfunction Continue({show, onContinue}) {\n     return (<div className=\"row-continue\">\n       {show ? <div className=\"col-11\">\n         <button className=\"btn btn-primary btn-lg float-right\" onClick={onContinue}>Continue</button>\n       </div> : null}\n     </div>)\n}\n function Footer() {\n \treturn (<div id=\"footer\" className=\"row\">\n             <div className=\"col-12\">\n               <p className=\"text-muted credit\">All images are from <a href=\"https://google.com\">Wikimedia Commons</a> and are in the public domain</p>\n             </div>\n \t\t</div>)\n }\nfunction AuthorQuiz({turnData, highlight, onAnswerSelected, onContinue}) {\n    return (\n     <div className=\"container-fluid\">\n     <Hero/>\n     <Turn {...turnData} highlight={highlight} onAnswerSelected={onAnswerSelected}/>\n     <Continue show={highlight === 'correct'} onContinue={onContinue} />\n     <p><Link to=\"/add\">Add an Author</Link></p>\n     <Footer/>\n     </div>\n    );\n}\n\t\nexport default AuthorQuiz;\n","import React, { Component } from 'react';\nimport './AddAuthorForm.css';\n\nclass AuthorForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            imageUrl: '',\n            books: [],\n            bookTemp:''\n        }\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAddBook = this.handleAddBook.bind(this);\n    }\n    handleSubmit(event) {\n      event.preventDefault();\n      this.props.onAddAuthor(this.state);\n    }\n    handleAddBook() {\n     this.setState({books: this.state.books.concat(this.state.bookTemp),bookTemp:''}\n     )\n    }\n    onFieldChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    render() {\n        return <form className=\"AddAuthorName\" onSubmit={this.handleSubmit}>\n            <div className=\"AddAuthorForm_input\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.onFieldChange}></input>\n            </div>\n            <div className=\"AddAuthorForm_input\">\n                <label htmlFor=\"imageUrl\">Image Url</label>\n                <input type=\"text\" name=\"imageUrl\" value={this.state.imageUrl} onChange={this.onFieldChange}></input>\n            </div>\n            <div className=\"AddAuthorForm_input\">\n               { this.state.books.map((book) => <p key={book}>{book}</p>)}\n                <label htmlFor=\"bookTemp\">Books</label>\n                <input type=\"text\" name=\"bookTemp\" value={this.state.bookTemp} onChange={this.onFieldChange}></input>\n                <input type=\"button\" value=\"+\" onClick={this.handleAddBook} />          \n            </div>\n            <input type=\"submit\" value=\"Add\" />\n        </form>\n    }\n}\nfunction AddAuthorForm({ match , onAddAuthor}) {\n    return (<div className=\"AddAuthor\">\n        <h1>Add Author</h1>\n        <AuthorForm  onAddAuthor={onAddAuthor} />\n    </div>\n    );\n}\n\nexport default AddAuthorForm;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './AddAuthorForm';\nimport * as serviceWorker from './serviceWorker';\nimport {shuffle, sample} from 'underscore';\n\nconst authors = [\n    {\n    \tname: 'Mark Twain',\n    \timageUrl: 'images/authors/marktwain.jpg',\n    \timageSource: 'Wikimedia Commons',\n    \tbooks: ['The Adventures of Huckleberry Finn','Life on the Mississipi', 'Roughing It']\n\t},\n\t{\n    \tname: 'JK Rowling',\n    \timageUrl: 'images/authors/jkrowling.jpg',\n    \timageSource: 'Wikimedia Commons',\n    \tbooks: ['Harry potter and the chamber of secret','Harry potter and the sorcerors stone']\n\t},\n\t{\n    \tname: 'George RR Martin',\n    \timageUrl: 'images/authors/georgerrmartin.jpg',\n    \timageSource: 'Wikimedia Commons',\n    \tbooks: ['Game of Thrones','Fire and Blood']\n\t},\n\t{\n    \tname: 'William Shakespeare',\n    \timageUrl: 'images/authors/shakespeare.jpg',\n    \timageSource: 'Wikimedia Commons',\n    \tbooks: ['Macbeth','Hamlet', 'Julius Caeser']\n\t},\n\t{\n    \tname: 'Jane Austen',\n    \timageUrl: 'images/authors/janeausten.jpg',\n    \timageSource: 'Wikimedia Commons',\n    \tbooks: ['Pride and Prejudice','Sense and Sensibility', 'Emma']\n    }\n\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function(p,c,i) {\n\t  return (p.concat(c.books))\n  },[]);\n  const fourRandomBooks = shuffle(allBooks).slice(0,4);\n  const answer = sample(fourRandomBooks);\n  return {\n\t books: fourRandomBooks,\n\t author: authors.find((author) => author.books.some((title) => title === answer)) \n     };\n}\nfunction resetState() {\n\treturn {\n\t\tturnData : getTurnData(authors),\n\t\thighlight: ''\n\t}\n}\nlet state = resetState();\nfunction onAnswerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some((book) => book === answer);\n  state.highlight = isCorrect ? 'correct' : 'wrong';\n  render();\n}\n \n function App() {\n  return <AuthorQuiz {...state} onAnswerSelected={onAnswerSelected} \n\tonContinue= {() => {\n\t state= resetState();\n\t render();\n\t}}\n\t/>;\t\n }\n const AuthorWrapper = withRouter(({history}) => \n\t <AddAuthorForm onAddAuthor={(author) => {\n\t\t authors.push(author);\n\t  history.push('/');\n   }} />\n )\n\nfunction render() {\nReactDOM.render(<BrowserRouter>\n<React.Fragment>\n<Route exact path=\"/authorquiz\" component={App} />\n<Route exact path=\"/add\" component={AddAuthorForm} />\n</React.Fragment>\n</BrowserRouter>, document.getElementById('root'));\n}\nrender();\nserviceWorker.unregister();\n"],"sourceRoot":""}